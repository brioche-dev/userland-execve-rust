use std::{
    ffi::{CString, OsString},
    os::unix::prelude::OsStringExt,
    path::PathBuf,
};

use userland_execve_rust::exec;

fn os_string_to_c_string(s: OsString) -> CString {
    let mut v = s.into_vec();
    v.push(0);
    CString::from_vec_with_nul(v).unwrap()
}

fn get_path_args() -> (PathBuf, Vec<CString>) {
    let mut main_args = std::env::args_os();
    main_args.next();
    let path = main_args.next().unwrap();
    let path = PathBuf::from(path);
    let args = main_args.map(os_string_to_c_string).collect();
    (path, args)
}

fn get_env() -> Vec<CString> {
    std::env::vars_os()
        .map(|(key, val)| {
            [key, OsString::from("="), val]
                .into_iter()
                .collect::<OsString>()
        })
        .map(os_string_to_c_string)
        .collect()
}

fn main() {
    let (path, args) = get_path_args();
    let env = get_env();
    exec(&path, &args, &env)
}
